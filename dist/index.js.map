{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar lnf = require( '@stdlib/math-base-special-lnf' );\nvar float64ToFloat32 = require( '@stdlib/number-float64-base-to-float32' );\n\n\n// MAIN //\n\n/**\n* Computes the base `b` logarithm of a single-precision floating-point number.\n*\n* @param {NonNegativeNumber} x - input value\n* @param {NonNegativeNumber} b - base\n* @returns {number} logarithm (base `b`)\n*\n* @example\n* var v = logf( 100.0, 10.0 );\n* // returns 2.0\n*\n* @example\n* var v = logf( 16.0, 2.0 );\n* // returns 4.0\n*\n* @example\n* var v = logf( 5.0, 1.0 );\n* // returns Infinity\n*\n* @example\n* var v = logf( NaN, 2.0 );\n* // returns NaN\n*\n* @example\n* var v = logf( 1.0, NaN );\n* // returns NaN\n*\n* @example\n* var v = logf( -4.0, 2.0 );\n* // returns NaN\n*\n* @example\n* var v = logf( 4.0, -2.0 );\n* // returns NaN\n*/\nfunction logf( x, b ) {\n\treturn float64ToFloat32( lnf( float64ToFloat32( x ) ) / lnf( float64ToFloat32( b ) ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = logf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the base `b` logarithm of a single-precision floating-point number.\n*\n* @module @stdlib/math-base-special-logf\n*\n* @example\n* var logf = require( '@stdlib/math-base-special-logf' );\n*\n* var v = logf( 100.0, 10.0 );\n* // returns 2.0\n*\n* v = logf( 16.0, 2.0 );\n* // returns 4.0\n*\n* v = logf( 5.0, 1.0 );\n* // returns Infinity\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAM,QAAS,+BAAgC,EAC/CC,EAAmB,QAAS,wCAAyC,EAwCzE,SAASC,EAAMC,EAAGC,EAAI,CACrB,OAAOH,EAAkBD,EAAKC,EAAkBE,CAAE,CAAE,EAAIH,EAAKC,EAAkBG,CAAE,CAAE,CAAE,CACtF,CAKAL,EAAO,QAAUG,IC9BjB,IAAIG,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "lnf", "float64ToFloat32", "logf", "x", "b", "main"]
}
